<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gjj.springvuedemo.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.gjj.springvuedemo.model.User" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="userMap" type="com.gjj.springvuedemo.model.User">
    <id column="uid" property="uid"/>
    <result column="user_name" property="userName" />
    <result column="user_password" property="userPassword" />
    <collection property="roleList" ofType="com.gjj.springvuedemo.model.Role">
      <id column="rid" property="rid" />
      <result column="rname" property="rname" />
      <collection property="permissionList" ofType="com.gjj.springvuedemo.model.Permission">
        <id column="pid" property="pid" />
        <result column="pname" property="pname" />
      </collection>
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    uid, user_name, user_password
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <select id="getAllUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user
  </select>
  <select id="findByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from t_user
    where user_name = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gjj.springvuedemo.model.User" >
    insert into t_user (uid, user_name, user_password
      )
    values (#{uid,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gjj.springvuedemo.model.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPassword != null" >
        user_password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gjj.springvuedemo.model.User" >
    update t_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gjj.springvuedemo.model.User" >
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>

  <select id="findByIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user
    where uid in
    <foreach collection="array" item="id" open="(" separator="," close=")">
        #{id}
    </foreach>
  </select>
  
  <select id="findUserById" parameterType="Integer" resultMap="userMap">
    select u.*,p.*,r.*
    from t_user u
    INNER JOIN t_user_role ur on ur.uid = u.uid
    INNER JOIN t_role r on r.rid = ur.rid
    INNER JOIN t_role_permission rp on rp.rid = r.rid
    INNER JOIN t_permission p on p.pid = rp.pid
    where u.uid = #{uid}
  </select>
</mapper>