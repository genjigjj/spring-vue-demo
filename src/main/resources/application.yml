server:
  port: 8099
  context-path: /

management:
  security:
    enabled: false #关掉安全认证
  port: 8088 #管理端口调整成8088
  context-path: /monitor #actuator的访问路径
endpoints:
  shutdown:
    enabled: true
info:
   app:
      name: spring-boot-actuator
      version: 1.0.0

logging:
    path: ${user.home}/logs

#mysql 
spring:
  datasource:
    druid:
      #JDBC 配置
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/test
      username: root
      password: root
      
      #连接池配置
      min-idle: 1
      max-active: 20
      initial-size: 1
      # 配置获取连接等待超时的时间
      max-wait: 60000
      validation-query: select 'x'
      test-on-borrow: false
      test-while-idle: true
      test-on-return: false
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      maxOpenPreparedStatements: 20
      filters: stat,wall,log4j
      
      #监控配置
      stat-view-servlet:
        login-username: admin
        login-password: admin
        allow: 127.0.0.1
  #redis
  redis:
    # Redis服务器地址
    host: 127.0.0.1
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器连接端口
    port: 6379
    pool:
      # 连接池最大连接数（使用负值表示没有限制）
      max-active: 8
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
      # 连接池中的最大空闲连接
      max-idle: 8
      # 连接池中的最小空闲连接
      min-idle: 0
    # 连接超时时间（毫秒）
    timeout: 3000
    
#mybatis
mybatis:
  # 对应实体类的包名
  typeAliasesPackage: com.gjj.springvuedemo.model	
  # mapper.xml文件所在位置
  mapperLocations: classpath:mapper/*.xml